import React from 'react';
import { useInView } from 'react-intersection-observer';

function Projects() {
  const { ref, inView } = useInView({
    triggerOnce: true, // Lance l'animation uniquement lors de la premi√®re vue
    threshold: 0.2, // L'animation d√©marre lorsque 10% de la section sont visibles
  });
  return (
    <section id="Projects" ref={ref} className={`fade-in ${inView ? 'appear' : ''}`}>
      <h2>Projets R√©alis√©s</h2>

<div>
<h3>
          <a href="https://github.com/JeffToken31/holbertonschool-hbnb" target="_blank" rel="noopener noreferrer">
            Clonage du site Airbnb ‚Äì HBNB | 2024 üîó
          </a>
        </h3>
        <p><strong>Contexte :</strong> Projet d‚Äô√©quipe ‚Äì Holberton School</p>
        <p><strong>Technos :</strong> Python, Flask, Flask-RESTx, SQLAlchemy, MySQL</p>
        <p><strong>Description :</strong> D√©veloppement orient√© objet d‚Äôun back-end complet inspir√© d‚ÄôAirbnb. API RESTful avec authentification JWT, gestion des routes via une fa√ßade en Singleton, scripts SQL pour les tests, et utilisation du framework `unittest`.</p>
        <p><strong>Comp√©tences cl√©s :</strong> Design Pattern Singleton, REST API, ORM SQLAlchemy, tests unitaires, s√©curit√© (bcrypt), architecture MVC, travail en √©quipe avec Git.</p>
      </div>

      <div>
        <h3>
          <a href="https://github.com/JeffToken31/holbertonschool-simple_shell" target="_blank" rel="noopener noreferrer">
            Simple Shell (sh) ‚Äì Shell Unix simplifi√© | 2024 üîó
          </a>
        </h3>
        <p><strong>Contexte :</strong> Projet d‚Äô√©quipe ‚Äì Holberton School</p>
        <p><strong>Technos :</strong> C, Bash</p>
        <p><strong>Description :</strong> D√©veloppement d‚Äôun shell Unix minimaliste avec parsing, boucle principale, ex√©cution des commandes via `fork`/`execve`, gestion des signaux et de la m√©moire. Commandes int√©gr√©es comme `cd`, `exit`, `env`, `cp` (ajout√©e).</p>
        <p><strong>Comp√©tences cl√©s :</strong> Processus Unix, bas niveau, gestion m√©moire, normes Betty (C89), usage de Valgrind pour validation m√©moire.</p>
      </div>

      <div>
        <h3>
          <a href="https://github.com/JeffToken31/holbertonschool-printf" target="_blank" rel="noopener noreferrer">
            Reproduction de la fonction printf | 2024 üîó
          </a>
        </h3>
        <p><strong>Contexte :</strong> Projet d‚Äô√©quipe ‚Äì Holberton School</p>
        <p><strong>Technos :</strong> C</p>
        <p><strong>Description :</strong> R√©√©criture compl√®te de `printf` en C, en utilisant des fonctions bas niveau (`write`) et sans appel aux fonctions standards. Support des formats `%d`, `%s`, `%x`, `%p`, etc. Gestion avanc√©e des `va_list`, pointeurs, conversion.</p>
        <p><strong>Comp√©tences cl√©s :</strong> Syst√®mes bas niveau, affichage m√©moire, gestion des cha√Ænes et pointeurs, respect strict du style C89, conformit√© Valgrind.</p>
      </div>

      <div>
        <h3>
            CV Interactif ‚Äì D√©ploiement Web | 2025
        </h3>
        <p><strong>Contexte :</strong> Projet personnel</p>
        <p><strong>Technos :</strong> ReactJS, HTML, CSS, JavaScript</p>
        <p><strong>Description :</strong> CV responsive et anim√© avec ReactJS, utilisant des hooks (`useInView`), animations CSS et d√©ploiement web. Navigation fluide en scroll.</p>
        <p><strong>Comp√©tences cl√©s :</strong> React moderne, accessibilit√©, responsive design, UX/UI.</p>
        <p><strong>Remarque :</strong> Node.js est utilis√© en environnement de d√©veloppement pour React, mais n‚Äôa pas √©t√© utilis√© pour le back-end ici.</p>
      </div>

      <div>
        <h3>dApp Swap & Staking (Ethereum) ‚Äì Prototype | 2025</h3>
        <p><strong>Contexte :</strong> Projet personnel ‚Äì en cours</p>
        <p><strong>Technos :</strong> Solidity, Hardhat, Ethers.js v6, OpenZeppelin, Node.js</p>
        <p><strong>Description :</strong> D√©veloppement d‚Äôune dApp pour swapper et staker des tokens ERC20, avec g√©n√©ration d‚Äôint√©r√™ts. Contrats intelligents test√©s localement, tentatives de d√©ploiement sur le testnet Sonic (ex-Phantom).</p>
        <p><strong>Comp√©tences cl√©s :</strong> Smart Contracts, s√©curit√© Solidity, scripts de d√©ploiement, tests unitaires (Mocha/Chai), interaction front/back avec Ethers.js.</p>
      </div>

      <div>
        <h3>Site Dynamique PHP | 2024</h3>
        <p><strong>Contexte :</strong> Projet OpenClassrooms ‚Äì solo</p>
        <p><strong>Technos :</strong> PHP, HTML, CSS, MySQL</p>
        <p><strong>Description :</strong> D√©veloppement d‚Äôun site dynamique avec formulaire, traitement serveur, insertion en base de donn√©es MySQL. Utilisation de logiciels comme XAMPP et Cleopatra pour simuler un serveur local.</p>
        <p><strong>Comp√©tences cl√©s :</strong> Traitement de requ√™tes HTTP, back-end simple, s√©curit√© des entr√©es, structure HTML/PHP s√©par√©e.</p>
      </div>

      <div>
        <h3>Mini-projets Web | 2023 ‚Äì 2025</h3>
        <p><strong>Contexte :</strong> Formations FreeCodeCamp, OpenClassrooms, projets personnels</p>
        <p><strong>Technos :</strong> HTML, CSS, JavaScript</p>
        <p><strong>Description :</strong> R√©alisation de nombreux mini-projets pour renforcer la logique JS et la manipulation du DOM : to-do list, g√©n√©rateur de citations, mini-jeux, animations, etc.</p>
        <p><strong>Comp√©tences cl√©s :</strong> JS vanilla, DOM, logique conditionnelle, animation CSS, responsive design.</p>
      </div>
    </section>
  );
}

export default Projects;
